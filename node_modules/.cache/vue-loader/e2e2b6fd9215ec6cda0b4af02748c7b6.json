{"remainingRequest":"D:\\桌面\\页面练习\\vue-blog\\vue-blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\桌面\\页面练习\\vue-blog\\vue-blog\\src\\components\\m\\BaseForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\桌面\\页面练习\\vue-blog\\vue-blog\\src\\components\\m\\BaseForm.vue","mtime":1631517080646},{"path":"D:\\桌面\\页面练习\\vue-blog\\vue-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\桌面\\页面练习\\vue-blog\\vue-blog\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\桌面\\页面练习\\vue-blog\\vue-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\桌面\\页面练习\\vue-blog\\vue-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgRk9STV9EQVRBIGZyb20gJ0AvY29uZmlnL2Zvcm0uY29uZmlnJw0KaW1wb3J0IFZBTElEQVRFX0RBVEEgZnJvbSAnQC9jb25maWcvdmFsaWRhdGUuY29uZmlnJw0KaW1wb3J0IE1PREFMX0RBVEEgZnJvbSAnQC9jb25maWcvbW9kYWwuY29uZmlnJw0KaW1wb3J0IF9wYWRTdGFydCBmcm9tICdsb2Rhc2gvcGFkU3RhcnQnDQppbXBvcnQgX2NhcGl0YWxpemUgZnJvbSAnbG9kYXNoL2NhcGl0YWxpemUnDQppbXBvcnQgeyBtYXBHZXR0ZXJzLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCcNCmltcG9ydCB7IFRvYXN0IH0gZnJvbSAndmFudCcNCmNvbnN0IFRBR19WQUxVRSA9IHsNCiAgJ2xvZ2luJzogJ+i/mOayoeaciei0puWPtz8nLA0KICAncmVnaXN0ZXInOiAn5bey5pyJ6LSm5Y+3PycsDQogICd1c2VySW5mbyc6ICcnDQp9DQpjb25zdCBTUEFOX1ZBTFVFID0gew0KICAnbG9naW4nOiAn54K55Ye75rOo5YaMJywNCiAgJ3JlZ2lzdGVyJzogJ+eCueWHu+eZu+W9lScNCn0NCmNvbnN0IEJUTl9OQU1FID0gew0KICAnbG9naW4nOiAn55m75b2VJywNCiAgJ3JlZ2lzdGVyJzogJ+azqOWGjCcsDQogICd1c2VySW5mbyc6ICfkv67mlLknDQp9DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdCYXNlRm9ybScsDQogIGNvbXBvbmVudHM6IHsNCg0KICB9LA0KICBwcm9wczogew0KDQogIH0sDQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBmb3JtOiB7fSwNCiAgICAgIHR5cGU6ICd1c2VySW5mbycsDQogICAgICB1cGxvYWQ6IFtdDQogICAgfQ0KICB9LA0KICBjcmVhdGVkICgpIHsNCg0KICB9LA0KICB1cGRhdGVkICgpIHsNCg0KICB9LA0KICBtb3VudGVkICgpIHsNCiAgICBsZXQgaXNMb2dpbiA9IHRoaXMuJHN0b3JlLnN0YXRlLnRva2VuDQogICAgaWYgKCFpc0xvZ2luKSB7DQogICAgICB0aGlzLnR5cGUgPSAnbG9naW4nDQogICAgfQ0KICAgIGlmICh0aGlzLnR5cGUgPT09ICJ1c2VySW5mbyIpIHsNCiAgICAgIHRoaXMuZm9ybSA9IHRoaXMuZm9ybVVzZXJJbmZvDQogICAgfQ0KICB9LA0KICBmaWx0ZXJzOiB7DQogICAgZm9ybWF0UnVsZVRyaWdnZXIgKHJ1bGVzKSB7DQogICAgICByZXR1cm4gcnVsZXM/Lm1hcChpdGVtID0+IHsNCiAgICAgICAgaXRlbS50cmlnZ2VyID0gX3BhZFN0YXJ0KF9jYXBpdGFsaXplKGl0ZW0udHJpZ2dlciksIDYsICdvbicpDQogICAgICAgIHJldHVybiBpdGVtDQogICAgICB9KQ0KICAgIH0sDQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgZm9ybVVzZXJJbmZvICgpIHsNCiAgICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXModGhpcy4kc3RvcmUuZ2V0dGVycy51c2VySW5mbykuZmlsdGVyKChba2V5XSkgPT4gew0KICAgICAgICByZXR1cm4gRk9STV9EQVRBWyd1c2VySW5mbyddLmZpbmQoaXRlbSA9PiB7DQogICAgICAgICAgcmV0dXJuIGtleSA9PSBpdGVtWydxdWVyeSddDQogICAgICAgIH0pDQogICAgICB9KSkNCiAgICB9LA0KICAgIGZvcm1EYXRhICgpIHsNCiAgICAgIHJldHVybiBGT1JNX0RBVEFbdGhpcy50eXBlXQ0KICAgIH0sDQogICAgdGl0bGUgKCkgew0KICAgICAgcmV0dXJuIE1PREFMX0RBVEFbdGhpcy50eXBlXT8udGl0bGUNCiAgICB9LA0KICAgIHRhZ1ZhbHVlICgpIHsNCiAgICAgIHJldHVybiBUQUdfVkFMVUVbdGhpcy50eXBlXQ0KICAgIH0sDQogICAgc3BhblZhbHVlICgpIHsNCiAgICAgIHJldHVybiBTUEFOX1ZBTFVFW3RoaXMudHlwZV0NCiAgICB9LA0KICAgIHZhbGlkYXRlcyAoKSB7DQogICAgICByZXR1cm4gVkFMSURBVEVfREFUQQ0KICAgIH0sDQogICAgYnRuTmFtZSAoKSB7DQogICAgICByZXR1cm4gQlROX05BTUVbdGhpcy50eXBlXQ0KICAgIH0sDQogICAgLi4ubWFwR2V0dGVycyhbJ3VzZXJJbmZvJ10pDQogIH0sDQogIHdhdGNoOiB7DQogICAgdHlwZSAobmV3VHlwZSkgew0KICAgICAgdGhpcy5pbml0Rm9ybSgpDQogICAgICBpZiAobmV3VHlwZSA9PT0gJ3VzZXJJbmZvJykgew0KICAgICAgICB0aGlzLmZvcm0gPSB0aGlzLmZvcm1Vc2VySW5mbw0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFzeW5jIG9uU3VibWl0ICgpIHsNCiAgICAgIHRyeSB7DQogICAgICAgIGxldCB0eXBlID0gdGhpcy50eXBlID09PSAndXNlckluZm8nID8gInB1dFVzZXJJbmZvIiA6IHRoaXMudHlwZQ0KICAgICAgICBhd2FpdCB0aGlzLiRhcGkoeyB0eXBlOiB0eXBlLCBkYXRhOiB0aGlzLmZvcm0gfSkNCiAgICAgICAgYXdhaXQgdGhpcy5nZXRVc2VySW5mbygpDQogICAgICAgIFRvYXN0KGAke0JUTl9OQU1FW3RoaXMudHlwZV195oiQ5YqfYCkNCiAgICAgICAgdGhpcy50eXBlID0gJ3VzZXJJbmZvJw0KDQogICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICBUb2FzdCh7IG1lc3NhZ2U6IGVycm9yIH0pDQogICAgICB9DQogICAgfSwNCiAgICBhc3luYyBhZnRlclJlYWQgKHVwbG9hZCkgew0KICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCkNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnYXZhdGFyJywgdXBsb2FkLmZpbGUpDQogICAgICB0cnkgew0KICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgdGhpcy4kYXBpKHsgdHlwZTogJ2F2YXRhcicsIGRhdGE6IGZvcm1EYXRhIH0pDQogICAgICAgIHRoaXMuZm9ybS5hdmF0YXIgPSByZXN1bHQuZmlsZVVSTA0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgVG9hc3QoeyBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0pDQogICAgICB9DQogICAgfSwNCiAgICBjaGFuZ2VUeXBlICgpIHsNCiAgICAgIHRoaXMudHlwZSA9IHRoaXMudHlwZSA9PT0gJ2xvZ2luJyA/ICdyZWdpc3RlcicgOiAnbG9naW4nDQogICAgfSwNCiAgICBvbk92ZXJzaXplICgpIHsNCiAgICAgIFRvYXN0KCfmlofku7blpKflsI/kuI3og73otoXov4cgNTAwa2InKQ0KICAgIH0sDQogICAgaW5pdEZvcm0gKCkgew0KICAgICAgLy/ph43nva7ooajljZXlrZfmrrUg5Lul5Y+K5qCh6aqM54q25oCBDQogICAgICB0aGlzLmZvcm0gPSB7fQ0KICAgIH0sDQogICAgLi4ubWFwQWN0aW9ucyhbJ2dldFVzZXJJbmZvJ10pDQogIH0sDQp9DQo="},{"version":3,"sources":["BaseForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"BaseForm.vue","sourceRoot":"src/components/m","sourcesContent":["<template>\r\n  <van-form @submit=\"onSubmit\"\r\n            class=\"blogm-form\">\r\n    <h3 class=\"blogm-form--title\">{{title}}</h3>\r\n    <van-field class=\"blogm-form--cell\"\r\n               v-for=\"item in formData\"\r\n               :key=\"item['query']\"\r\n               v-model=\"form[item['query']]\"\r\n               :readonly=\"item['query'] === 'username' && type==='userInfo'\"\r\n               :name=\"item['query']==='avatar'? item['lable']: 'uploader'\"\r\n               :label=\"item['label']\"\r\n               :type=\"item['type']\"\r\n               :placeholder=\"item['placeholder']\"\r\n               :rules=\"validates[item['query']] | formatRuleTrigger\">\r\n      <template v-if=\"item['query']==='avatar'\"\r\n                #input>\r\n        <van-uploader v-model=\"upload\"\r\n                      :after-read=\"afterRead\"\r\n                      :max-count=\"1\"\r\n                      :max-size=\"500 * 1024\"\r\n                      @oversize=\"onOversize\" />\r\n      </template>\r\n    </van-field>\r\n    <p class=\"blogm-form--tag\"\r\n       v-if=\"tagValue\">\r\n      {{tagValue}}\r\n      <span @click=\"changeType\">{{spanValue}}</span>\r\n    </p>\r\n    <div style=\"margin: 16px;\">\r\n      <van-button round\r\n                  block\r\n                  type=\"info\"\r\n                  native-type=\"submit\">{{btnName}}</van-button>\r\n    </div>\r\n  </van-form>\r\n</template>\r\n\r\n<script>\r\nimport FORM_DATA from '@/config/form.config'\r\nimport VALIDATE_DATA from '@/config/validate.config'\r\nimport MODAL_DATA from '@/config/modal.config'\r\nimport _padStart from 'lodash/padStart'\r\nimport _capitalize from 'lodash/capitalize'\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport { Toast } from 'vant'\r\nconst TAG_VALUE = {\r\n  'login': '还没有账号?',\r\n  'register': '已有账号?',\r\n  'userInfo': ''\r\n}\r\nconst SPAN_VALUE = {\r\n  'login': '点击注册',\r\n  'register': '点击登录'\r\n}\r\nconst BTN_NAME = {\r\n  'login': '登录',\r\n  'register': '注册',\r\n  'userInfo': '修改'\r\n}\r\nexport default {\r\n  name: 'BaseForm',\r\n  components: {\r\n\r\n  },\r\n  props: {\r\n\r\n  },\r\n  data () {\r\n    return {\r\n      form: {},\r\n      type: 'userInfo',\r\n      upload: []\r\n    }\r\n  },\r\n  created () {\r\n\r\n  },\r\n  updated () {\r\n\r\n  },\r\n  mounted () {\r\n    let isLogin = this.$store.state.token\r\n    if (!isLogin) {\r\n      this.type = 'login'\r\n    }\r\n    if (this.type === \"userInfo\") {\r\n      this.form = this.formUserInfo\r\n    }\r\n  },\r\n  filters: {\r\n    formatRuleTrigger (rules) {\r\n      return rules?.map(item => {\r\n        item.trigger = _padStart(_capitalize(item.trigger), 6, 'on')\r\n        return item\r\n      })\r\n    },\r\n  },\r\n  computed: {\r\n    formUserInfo () {\r\n      return Object.fromEntries(Object.entries(this.$store.getters.userInfo).filter(([key]) => {\r\n        return FORM_DATA['userInfo'].find(item => {\r\n          return key == item['query']\r\n        })\r\n      }))\r\n    },\r\n    formData () {\r\n      return FORM_DATA[this.type]\r\n    },\r\n    title () {\r\n      return MODAL_DATA[this.type]?.title\r\n    },\r\n    tagValue () {\r\n      return TAG_VALUE[this.type]\r\n    },\r\n    spanValue () {\r\n      return SPAN_VALUE[this.type]\r\n    },\r\n    validates () {\r\n      return VALIDATE_DATA\r\n    },\r\n    btnName () {\r\n      return BTN_NAME[this.type]\r\n    },\r\n    ...mapGetters(['userInfo'])\r\n  },\r\n  watch: {\r\n    type (newType) {\r\n      this.initForm()\r\n      if (newType === 'userInfo') {\r\n        this.form = this.formUserInfo\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async onSubmit () {\r\n      try {\r\n        let type = this.type === 'userInfo' ? \"putUserInfo\" : this.type\r\n        await this.$api({ type: type, data: this.form })\r\n        await this.getUserInfo()\r\n        Toast(`${BTN_NAME[this.type]}成功`)\r\n        this.type = 'userInfo'\r\n\r\n      } catch (error) {\r\n        Toast({ message: error })\r\n      }\r\n    },\r\n    async afterRead (upload) {\r\n      let formData = new FormData()\r\n      formData.append('avatar', upload.file)\r\n      try {\r\n        let result = await this.$api({ type: 'avatar', data: formData })\r\n        this.form.avatar = result.fileURL\r\n      } catch (error) {\r\n        Toast({ message: error.message })\r\n      }\r\n    },\r\n    changeType () {\r\n      this.type = this.type === 'login' ? 'register' : 'login'\r\n    },\r\n    onOversize () {\r\n      Toast('文件大小不能超过 500kb')\r\n    },\r\n    initForm () {\r\n      //重置表单字段 以及校验状态\r\n      this.form = {}\r\n    },\r\n    ...mapActions(['getUserInfo'])\r\n  },\r\n}\r\n</script>\r\n<style lang='stylus'>\r\n.blogm-form\r\n  width 100%\r\n.blogm-form--cell\r\n  .van-field__value\r\n    line-height 35px\r\n  .van-field__label\r\n    width 5em\r\n    margin-right 0\r\n  .van-uploader__upload-icon\r\n    text-indent 0\r\n.blogm-form--title\r\n  margin 20px 0\r\n  font-size 20px\r\n  font-weight 600\r\n  text-align center\r\n.blogm-form--tag\r\n  margin 16px 20px 0 0\r\n  font-size 12px\r\n  text-align right\r\n  span\r\n    color #1989fa\r\n</style>"]}]}